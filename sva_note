Linux SVA特性分析
=================

-v0.1 2019.9.15 Sherlock init

简介: 最近Linux社区在上传SVA特性(share virtual memory), 简单讲这个特性可以达到
这样的功能，就是可以是设备直接使用进程里的虚拟地址。如果把设备操作映射到用户态，
就可以在用户态叫设备直接使用进程虚拟地址。设备可以使用进程虚拟地址做DMA，如果
设备功能强大，比如可以执行一段指令，设备甚至可以直接执行相应进程虚拟地址上的
指令。目前SVA特性正处于上传阶段，这个特性的补丁涉及到IOMMU, PCI, 内存管理(MM),
SMMU, VFIO, 虚拟化，DT, ACPI等方面的修改，所以补丁比较分散，不过好在这个特性的
上传者把相关补丁收集在了一个分支上，即https://jpbrucker.net/sva/ 的sva/current
分支上。想要了解SVA的整体，可以直接查看这个分支上的各个提交。需要说明是，这个
分支的base是5.2-rc7, 在5.3中这个分支上的少量补丁已经合入Linux主线，如果想用最
新内核测试SVA需要做一定的适配工作。本文的分析以base是5.2-rc7的sva/current分支
上的补丁为基础。

0. 使用场景介绍
---------------

  如上，SVA特性可以做到进程虚拟地址在进程和设备之间共享。最直观的使用场景就是在
  用户态做DMA。
```
             
    +------------------+     +----------------+
    |   进程           |     |  进程	      | 	...
    |                  |     |                |
    | va = malloc();   |     |                |
    | set dma dst: va  |     |                |
    |      +---------+ |     |                |          用户态
    +------+ mmap io +-+     +----------------+
 <---------+         +------------------------------------------> 
           +---------+
			内核

 <--------------------------------------------------------------> 
                +--------------+
                |  DMA dst: va |
                |              |
		|  设备        |
                +--------------+
```
  如上图所示，在SVA的支持下，我们可以在用户态进程malloc一段内存，然后把得到va
  直接配置给设备的DMA，然后启动DMA向va对应的虚拟地址写数据，当然也可以从va对应
  的虚拟地址上往设备读数据。这里我们把设备DMA相关的寄存器先mmap到用户态，这样
  DMA操作在用户态就可以完成。

  可以注意到，SVA可以支持功能很大一部分取决于设备的功能，SVA就是提供一个进程和
  设备一直的虚拟地址空间，其他的设备想怎么用都可以。如上，如果设备做的足够强，
  设备完全可以执行va上对应的代码。

  可以看到，设备完全可以把自身的资源分配给不同的进程同时使用。

  为了满足上面的使用场景，SVA特性需要硬件支持IOMMU以及设备发起缺页。在下一节
  先介绍硬件，再基于此分析SVA的软件实现。

1. 硬件基础介绍
---------------

  本文以ARM64体系结构为基础分析，在ARM64下，IOMMU指的就是SMMU。对于设备，ARM64
  下有平台设备和PCI设备。
```
               +-----+
               | CPU |
               +--+--+
                  |             
                  v             
               +-----+           +---------------------------------------------+
               | MMU |-----------+------------------------------------+        |
               +--+--+           | DDR                                |        |
                  |              |                                    |        |
                  v              |                                    |        |
  system bus ------------------> |                                    |        |
                  ^              |                                    v        |
                  |   SID/SSID   |      +-----+     +----+      +------------+ |
                  |       +------+----> | STE |---->| CD |----->| page table | |
                  |       |      |      +-----+     +----+      +------------+ |
                  |       |      |       ...        | CD |----->| page table | |
                  |       |      |                  +----+      +------------+ |
          IRQs    |       |      |                  | .. |      | ..         | |
                ^ |^  ^   |      |                  +----+      +------------+ |
                | ||  |   |      |                  | CD |----->| page table | |
      +---------+-++--+---+---+  |                  +----+      +------------+ |
      | SMMU    |  |  |   |   |  |                                             |
      |         |  |  |       |  |     +-------------+                         |
      |  +------+--+-CMD Q ---+--+---->| CMD queue   |                         |
      +--v--+   |  |          |  |     +-------------+                         |
      | PRI |---> PRI Q ------+--+---->| PRI queue   |                         |
      +-----+   |             |  |     +-------------+                         |
      | ATS |  EVENT Q -------+--+---->| EVENT queue |                         |
      +-----+-----------------+  |     +-------------+                         |
        ^ |     ^            ^   +---------------------------------------------+
        | |     |            |
        | v     | BDF/PASID  +--------------+
      +---------+-------------+             | 
      |         RP            |             | 
      +-----------------------+             | 
        ^ |       ^                         | 
        | v       |  BDF/PASID              | 
      +-+----+----+-+---------+  +-----+----+----------+
      | ATC  |      |         |  |     |               |                       
      +------+      |         |  | DMA |               |                       
      | PRI  |      |  EP     |  |     |               |                       
      +------+ DMA  |         |  +-----+  platform dev |                       
      +-------------+         |  |                     |                       
      +-----------------------+  +---------------------+
```

2. 数据结构
-----------

3. 动态分析
-----------

4. 性能分析
-----------

5. 虚拟化
---------

